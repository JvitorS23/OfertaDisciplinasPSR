/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import main.CSPprofTodisc.ProfessorDisciplina;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import main.aima.*;


/**
 *
 * @author jvss2
 */
public class VisualizarOferta extends javax.swing.JFrame {
    
    private  ArrayList<Professor> professores_oferta; 
    private ArrayList<Disciplina> disciplinas_oferta ;   
    private ArrayList<Disciplina> disciplinas_dcomp;
    private ArrayList<Disciplina> disciplinas_outros_deptos ;
    

    /**
     * Creates new form VisualizarOferta
     */
    public VisualizarOferta(ArrayList<Professor> professores_oferta, ArrayList<Disciplina> disciplinas_oferta) {
        initComponents();
        this.disciplinas_oferta = disciplinas_oferta;
        this.professores_oferta = professores_oferta;
        this.disciplinas_dcomp = new ArrayList<Disciplina>();
        this.disciplinas_outros_deptos = new ArrayList<Disciplina>();
      
        
        this.setResizable(false);
        setTitle("Info Nova Oferta");
        this.setLocationRelativeTo(null);
        
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    
        area_prof.setEditable(false);
        
        for(int i=0; i<professores_oferta.size(); i++){
            area_prof.append("=================\n");  
            area_prof.append("Nome: "+professores_oferta.get(i).getNome()+"\n");
            area_prof.append("Matricula: "+professores_oferta.get(i).getMatricula()+"\n");           
        }  
        
        for(int i=0; i<disciplinas_oferta.size(); i++){
            area_disc.append("=================\n");  
            area_disc.append("Nome: "+disciplinas_oferta.get(i).getNome()+"\n");
            area_disc.append("Codigo: "+disciplinas_oferta.get(i).getCodigo()+"\n");           
        }
        
        
        
    }

    private VisualizarOferta() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_oferta = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area_prof = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        area_disc = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_cancelar = new javax.swing.JButton();
        btn_gerar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_oferta.setText("Informações da Oferta Semestre 3 ");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        area_prof.setColumns(20);
        area_prof.setRows(5);
        jScrollPane1.setViewportView(area_prof);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        area_disc.setColumns(20);
        area_disc.setRows(5);
        jScrollPane2.setViewportView(area_disc);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText("Pofessores");

        jLabel3.setText("Disciplinas");

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_gerar.setText("Alocar disciplinas aos professores");
        btn_gerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(lbl_oferta)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                                .addComponent(btn_cancelar)
                                .addGap(18, 18, 18)
                                .addComponent(btn_gerar)
                                .addGap(35, 35, 35)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_oferta)
                .addGap(5, 5, 5)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancelar)
                    .addComponent(btn_gerar))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // TODO add your handling code here:
               
        this.dispose();
        new Inicio().setVisible(true);
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_gerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gerarActionPerformed
         
        //otimizar o algoritmo reordenando os professor pelos que tem menos disciplinas alocadas
        //ou menos preferencias
        
        //separa as disciplinas do dcomp das de outros deptos
        for(int i=0; i<disciplinas_oferta.size();i++){
            if(disciplinas_oferta.get(i).getCodigo().charAt(0)!='C'){                
                this.disciplinas_outros_deptos.add(disciplinas_oferta.get(i));                            
            }else{
                this.disciplinas_dcomp.add(disciplinas_oferta.get(i));                
            }         
        }  
        
        ProfessorDisciplina csp1 = null;
        FlexibleBacktrackingSolver strategy = new FlexibleBacktrackingSolver<Professor, String>();
        Assignment<Professor, String> resultado = null;
        Optional<Assignment<Professor, String>> solucao; 
        
        //adiciona disciplinas a definir
        for(int i = 0 ; i<professores_oferta.size(); i++){   
            Disciplina d = new Disciplina(0, "A definir", "a_definir"+professores_oferta.get(i).getMatricula(),0, false);
            disciplinas_dcomp.add(d);    
        }    
        
        int count=disciplinas_dcomp.size();
        boolean a = false;       
        while(count>0){
            a=false;
            for(int i = 0 ; i<professores_oferta.size(); i++){  
                String disc ="a_definir"+professores_oferta.get(i).getMatricula();
                for (int j = 0; j < disciplinas_dcomp.size(); j++) {
                    if(disc.equals(disciplinas_dcomp.get(i).getCodigo())){
                        a = true;                         
                    }
                    if(j==disciplinas_dcomp.size()-1 && a==false){
                        Disciplina d = new Disciplina(0, "A definir", "a_definir"+professores_oferta.get(i).getMatricula(),0, false);
                        disciplinas_dcomp.add(d);     
                        j++;
                    }
                }                
            }  

            try {
                csp1 = new ProfessorDisciplina(this.disciplinas_dcomp, this.professores_oferta);
            } catch(IOException ex) {
                Logger.getLogger(VisualizarOferta.class.getName()).log(Level.SEVERE, null, ex);
            }

            solucao = strategy.solve(csp1);
            
            //tratar retorno vazio
            try{
                resultado = solucao.get();                
            }catch(java.util.NoSuchElementException e){
                
                System.out.println("Não foi possível alocar");
                break;                
            }   
            
            //adiciona a alocação retornada pelo algoritmo as disciplinas lecionadas pelos professores
            //remove as disciplinas já alocadas para a proxima execução
            for(int i=0; i<professores_oferta.size(); i++){
                String disciplinaAux = resultado.getValue(resultado.getVariables().get(i));
                int creditos_lecionados = resultado.getVariables().get(i).getCreditos_lecionados();
                professores_oferta.get(i).setCreditos_lecionados(creditos_lecionados);
                professores_oferta.get(i).lecionadas.add(disciplinaAux);
                for(int j = 0; j < disciplinas_dcomp.size(); j++){
                    if(disciplinaAux.equals(disciplinas_dcomp.get(j).getCodigo())){
                        disciplinas_dcomp.remove(j);
                        j--;
                    }
                }
            }
            
            a=true; 
            for(int i=0; i<resultado.getVariables().size(); i++){               
                String disciplinaAux = resultado.getValue(resultado.getVariables().get(i));
                if(disciplinaAux.charAt(0)=='C')
                    a=false; 
            }
            if(a)
                break;
            
            int k=0;
            for(int i=0; i<disciplinas_dcomp.size(); i++){
                if(disciplinas_dcomp.get(i).getCodigo().charAt(0)=='C'){
                    k++;
                }
            }
            count = k; 
            if(count == 0){
                break; 
            }
            
        }
      
        //faz o tratamento da resposta para remover disciplinas a definir a mais
        String disc = "";
        for(int i=0; i<professores_oferta.size(); i++){
            ArrayList<String> aux = new ArrayList<String>();
            a = false; 
            for(int j=0; j<professores_oferta.get(i).lecionadas.size(); j++){
                disc =professores_oferta.get(i).lecionadas.get(j);
                if(disc.charAt(0)=='C'){
                    a = true; 
                }
                if(j==professores_oferta.get(i).lecionadas.size()-1 && a==false){
                    aux.add("a_definir_"+professores_oferta.get(i).getMatricula());
                    professores_oferta.get(i).setLecionadas(aux);
                    break;
                }    
                
                if(j==professores_oferta.get(i).lecionadas.size()-1 && a==true){
                    for(int k=0; k<professores_oferta.get(i).lecionadas.size(); k++){
                        if(professores_oferta.get(i).lecionadas.get(k).charAt(0)=='C'){
                            aux.add(professores_oferta.get(i).lecionadas.get(k));
                        }
                    }
                    professores_oferta.get(i).setLecionadas(aux);  
                    break;
                }         
            }
        }       
        
        for(int i=0; i<professores_oferta.size(); i++)
            System.out.println(professores_oferta.get(i).toString());
        
        this.dispose();
        new ResultCSP1(professores_oferta, disciplinas_oferta).setVisible(true);
        
    }//GEN-LAST:event_btn_gerarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisualizarOferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisualizarOferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisualizarOferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisualizarOferta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VisualizarOferta().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area_disc;
    private javax.swing.JTextArea area_prof;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_gerar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_oferta;
    // End of variables declaration//GEN-END:variables
}
